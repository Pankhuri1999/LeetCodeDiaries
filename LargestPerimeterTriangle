LARGEST PERIMETER TRIANGLE -
Given an integer array nums, return the largest perimeter of a triangle with a non-zero area, formed from three of these lengths. 
If it is impossible to form any triangle of a non-zero area, return 0

Code -
class Solution {
public:
    int largestPerimeter(vector<int>& nums) {
    //    int mx = 0;
    //    for(int i = 0; i<nums.size(); i++)
    //    {
    //     for(int j = i+1; j<nums.size(); j++)
    //     {
    //         for(int k = j+1; k<nums.size(); k++)
    //         {
    //             if ((nums[i] + nums[j] > nums[k]) && (nums[i] + nums[k] > nums[j]) && (nums[k] + nums[j] > nums[i])) mx = max(mx, (nums[i]+nums[j]+nums[k]));
    //         }
    //     }
    //    }
    //    return mx; 
    sort(nums.begin(), nums.end(), greater<int>());
    for(int i = 0; i<nums.size()-2; i++)
    {
       if (nums[i] < nums[i+1] + nums[i+2]) return nums[i] + nums[i+1] + nums[i+2];
    }
    return 0;
    }
};
