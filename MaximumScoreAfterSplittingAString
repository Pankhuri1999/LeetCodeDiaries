MAXIMUM  SCORE AFTER SPLITTING A STRING - 
Given a string s of zeros and ones, return the maximum score after splitting the string into two non-empty substrings (i.e. left substring and right substring).
The score after splitting a string is the number of zeros in the left substring plus the number of ones in the right substring.



Code - 
class Solution {
public:
    int cnt1(string str1)
    {
        int cnt = 0;
        for(int i = 0; i<str1.size(); i++)
        {
            if (str1[i] == '0')
            {
                cnt = cnt + 1;
            }
        }
        return cnt;
    }
    int cnt2(string str2)
    {
        int cnt = 0;
        for(int i = 0; i<str2.size(); i++)
        {
            if (str2[i] == '1')
            {
                cnt = cnt + 1;
            }
        }
        return cnt;
    }
    int maxScore(string s) {
        int score = 0;
        for(int i = 0; i<s.size()-1; i++)
        {
              int tmp1 = cnt1(s.substr(0, i+1));
              int tmp2 = cnt2(s.substr(i+1, s.size()-i));
              if (tmp1 + tmp2 > score)
              {
                score = tmp1 + tmp2;
              }
        }
        return score;
    }
};
