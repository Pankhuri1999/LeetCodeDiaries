FIND MISSING AND REPEATED VALUES - 
You are given a 0-indexed 2D integer matrix grid of size n * n with values in the range [1, n2]. Each integer appears exactly once except a which appears twice and b which is missing. 
The task is to find the repeating and missing numbers a and b.

Return a 0-indexed integer array ans of size 2 where ans[0] equals to a and ans[1] equals to b.


Code - 
class Solution {
public:
    vector<int> findMissingAndRepeatedValues(vector<vector<int>>& grid) {
        vector<int> vecy;
        int a, b, n = pow(grid.size(), 2), sumy = 0;
        for(int i = 0; i<grid.size(); i++)
        {
            for(int j = 0; j<grid[i].size(); j++)
            {
                 vecy.push_back(grid[i][j]);
                 sumy = sumy + grid[i][j];
            }
        }
       sort(vecy.begin(), vecy.end());
        for(int i = 0; i<vecy.size(); i++)
        {
            cout<<vecy[i]<<" , ";
            if (i>0&&vecy[i]==vecy[i-1])
             {a = vecy[i-1];}
        }

        // for(int i = 0; i<vecy.size()-1; i++)
        // {
        //      if (vecy[i] + 1 != vecy[i+1]) { b = (vecy[i] + 1);}
        // }

        //int tmp = ((accumulate(vecy.begin(), vecy.end(), 0)) - a);
        b = (n * (n + 1)/2) - (sumy - a);

        return {a, b};
    }
};
